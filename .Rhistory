x2
View(dsh)
dsh1=read.csv('dsh.csv')
x2= rapport("Descriptives", dsh1, var ='Age')
x2
rapport.export(x2,format="html")
ggpiestats(data=dsh,main="Sex",slice.label = "both",messages = FALSE,facet.proptest = FALSE,
results.subtitle = FALSE)
gghistostats(
data = dsh, # dataframe from which variable is to be taken
x = Age,results.subtitle = FALSE,test.line.labeller = FALSE,binwidth = 5,messages = FALSE)
x2= rapport("Descriptives", dsh1, var ='Gender')
rapport.export(x2,format="html")
x2= rapport("Descriptives", dsh1, var ='Gender')
x2= rapport("Descriptives", dsh1, var ='Sex')
rapport.export(x2,format="html")
rapport.ls()
x3=rapport("Crosstable", dsh1, row ='Sex',col='Group')
rapport.export(x3,format="html")
x3=rapport("Crosstable", dsh1, row ='Smoker',col='Group')
rapport.export(x3,format="html")
x2= rapport("Descriptives", dsh1, var ='Sex')
rapport.export(x2,format="html")
fig3=ggpiestats(data=dsh,main="Sex",slice.label = "both",messages = FALSE,facet.proptest = FALSE,
results.subtitle = FALSE)
fig3
fig3=ggpiestats(data=dsh,main="Sex",slice.label = "both",messages = FALSE,facet.proptest = FALSE,
results.subtitle = TRUE)
fig3
fig4=ggpiestats(data=dsh,main="Sex",condition="Group",slice.label = "both",messages = FALSE,facet.proptest = TRUE,
results.subtitle = TRUE)
fig4
fig1=gghistostats(
data = dsh, # dataframe from which variable is to be taken
x = Age,results.subtitle = FALSE,test.line.labeller = FALSE,binwidth = 5,messages = FALSE)
fig1
fig2=grouped_gghistostats(data=dsh,grouping.var = Group,x=Age,results.subtitle = FALSE,test.line.labeller = FALSE,binwidth = 5,ggplot.component = list( # modify the defaults from `ggstatsplot` for each plot
ggplot2::scale_y_continuous(breaks = seq(0, 10, 1), limits = (c(0, 10)))),
messages = FALSE)
fig2
fig3=ggpiestats(data=dsh,main="Smoker",slice.label = "both",messages = FALSE,facet.proptest = FALSE,
results.subtitle = TRUE)
fig3
fig3=ggpiestats(data=dsh,main="Sex",slice.label = "both",messages = FALSE,facet.proptest = FALSE,
results.subtitle = TRUE)
fig3
fig5=ggpiestats(data=dsh,main="Smoker",slice.label = "both",messages = FALSE,facet.proptest = FALSE,
results.subtitle = TRUE)
fig5
fig6=ggpiestats(data=dsh,main="Smoker",Condition="Group",slice.label = "both",messages = FALSE,facet.proptest = FALSE,
results.subtitle = TRUE)
fig6=ggpiestats(data=dsh,main="Smoker",condition="Group",slice.label = "both",messages = FALSE,facet.proptest = FALSE,
results.subtitle = TRUE)
fig6
fig6=ggpiestats(data=dsh,main="Smoker",condition="Group",slice.label = "both",messages = FALSE,facet.proptest = TRUE,
results.subtitle = TRUE)
fig6
fig6=ggpiestats(data=dsh,main="Smoker",condition="Group",slice.label = "both",messages = TRUE,facet.proptest = FALSE,
results.subtitle = TRUE)
fig6
ggpiestats(data=dsh,main="Smoker",condition="Group",slice.label = "both",messages = TRUE,facet.proptest = FALSE,
results.subtitle = TRUE)
ggstatsplot::ggbetweenstats(
data = dsh,
x = Group,
y = LDL,
messages = FALSE,
pairwise.comparisons = TRUE,         # display results from pairwise comparisons
pairwise.display = "significant",    # display only significant pairwise comparisons
pairwise.annotation = "p.value",     # annotate the pairwise comparisons using p-values
p.adjust.method = "tukey",
)
ggstatsplot::ggbetweenstats(
data = dsh,
x = Group,
y = LDL,
messages = FALSE,
pairwise.comparisons = TRUE,         # display results from pairwise comparisons
pairwise.display = "significant",    # display only significant pairwise comparisons
pairwise.annotation = "p.value",     # annotate the pairwise comparisons using p-values
p.adjust.method = "fdr",
)
ggstatsplot::ggbetweenstats(
data = dsh,
x = Group,
y = LDL,
messages = FALSE,
pairwise.comparisons = TRUE,         # display results from pairwise comparisons
pairwise.display = "significant",    # display only significant pairwise comparisons
# pairwise.annotation = "p.value",     # annotate the pairwise comparisons using p-values
p.adjust.method = "fdr",
plot.type = "box"
)
fig7=ggstatsplot::ggbetweenstats(
data = dsh,
x = Group,
y = LDL,
messages = FALSE,
pairwise.comparisons = TRUE,         # display results from pairwise comparisons
pairwise.display = "significant",    # display only significant pairwise comparisons
pairwise.annotation = "p.value",     # annotate the pairwise comparisons using p-values
p.adjust.method = "fdr",
plot.type = "box"
)
fi7+labs(caption = " ")
fig7=ggstatsplot::ggbetweenstats(
data = dsh,
x = Group,
y = LDL,
messages = FALSE,
pairwise.comparisons = TRUE,         # display results from pairwise comparisons
pairwise.display = "significant",    # display only significant pairwise comparisons
pairwise.annotation = "p.value",     # annotate the pairwise comparisons using p-values
p.adjust.method = "fdr",
plot.type = "box"
)
fig7+labs(caption = " ")
fig7=ggstatsplot::ggbetweenstats(
data = dsh,
x = Group,
y = LDL,
messages = FALSE,
pairwise.comparisons = TRUE,         # display results from pairwise comparisons
pairwise.display = "all",    # display only significant pairwise comparisons
pairwise.annotation = "p.value",     # annotate the pairwise comparisons using p-values
p.adjust.method = "fdr",
plot.type = "box"
)
fig7+labs(caption = " ")
fig7=ggstatsplot::ggbetweenstats(
data = dsh,
x = Group,
y = LDL,
messages = FALSE,
pairwise.comparisons = TRUE,         # display results from pairwise comparisons
pairwise.display = "all",    # display only significant pairwise comparisons
pairwise.annotation = "p.value",     # annotate the pairwise comparisons using p-values
p.adjust.method = "fdr",
plot.type = "box",
results.subtitle = FALSE,
param.mean.ci=TRUE
)
fig7=ggstatsplot::ggbetweenstats(
data = dsh,
x = Group,
y = LDL,
messages = FALSE,
pairwise.comparisons = TRUE,         # display results from pairwise comparisons
pairwise.display = "all",    # display only significant pairwise comparisons
pairwise.annotation = "p.value",     # annotate the pairwise comparisons using p-values
p.adjust.method = "fdr",
plot.type = "box",
results.subtitle = FALSE,
mean.ci=TRUE
)
fig7=fig7+labs(caption = " ")
fig7
fig7=ggstatsplot::ggbetweenstats(
data = dsh,
x = Group,
y = LDL,
messages = FALSE,
pairwise.comparisons = TRUE,         # display results from pairwise comparisons
pairwise.display = "all",    # display only significant pairwise comparisons
pairwise.annotation = "p.value",     # annotate the pairwise comparisons using p-values
p.adjust.method = "fdr",
plot.type = "box",
results.subtitle = FALSE
)
fig7=fig7+labs(caption = " ")
fig7
x=rapport("ANOVA", dsh, resp = "LDL", fac = "Group")
rapport.export(x,format="html")
dsh %>% select_if(is.numeric) %>% map_df(~tidy( TukeyHSD(aov(.~dsh$Group))))
dsh %>% select_if(is.numeric) %>% map_df(~tidy( TukeyHSD(aov(.~dsh$Group)))) %>%
tibble(names = names(.), data = .)
dsh %>% select_if(is.numeric) %>% map_df(~tidy( TukeyHSD(aov(.~dsh$Group))))
dsh %>% select_if(is.numeric) %>% names()
dsh %>% select_if(is.numeric) %>% names() %>% select(-X1) ->names
dsh %>% select_if(is.numeric) %>% names() %>% select(-X1)
dsh %>% select_if(is.numeric) %>% names()
dsh %>% select_if(is.numeric) %>% names()  ->names
dsh %>% select_if(is.numeric) %>%select(-X1) %>%  map_df(~tidy( TukeyHSD(aov(.~dsh$Group)))) %>%
mutate(term=rep(names,3))
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy( TukeyHSD(aov(.~dsh$Group)))) %>%
mutate(term=rep(names,3)) %>% filter(!term=="X1")
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy( TukeyHSD(aov(.~dsh$Group)))) %>%
mutate(term=rep(names,3)) %>% filter(!term=="X1") %>% arrange(term)
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy( TukeyHSD(aov(.~dsh$Group)))) %>%
mutate(term=rep(names,3)) %>% filter(!term=="X1") %>% arrange(term) %>% filter(term=="LDL")
rep(names,3)
rep(names,times=3)
rep(names,each=3)
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy( TukeyHSD(aov(.~dsh$Group)))) %>%
mutate(term=rep(names,each=3)) %>% filter(!term=="X1") %>% arrange(term) %>% filter(term=="LDL")
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy( TukeyHSD(aov(.~dsh$Group)))) %>%
mutate(term=rep(names,each=3)) %>% filter(!term=="X1") %>% arrange(term)
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy( TukeyHSD(aov(.~dsh$Group)))) %>%
mutate(term=rep(names,each=3)) %>% filter(!term=="X1") %>% arrange(term) %>% filter(term=="LDL")
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy( TukeyHSD(aov(.~dsh$Group)))) %>%
mutate(term=rep(names,each=3)) %>% filter(!term=="X1") %>% arrange(term) %>% filter(term=="LDL") %>%
mutate(significance=ifelse(p.value<0.001,"significant","non-significant")
)
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy( TukeyHSD(aov(.~dsh$Group)))) %>%
mutate(term=rep(names,each=3)) %>% filter(!term=="X1") %>% arrange(term) %>% filter(term=="LDL") %>%
mutate(significance=ifelse(adj.p.value<0.001,"significant","non-significant")
)
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy( TukeyHSD(aov(.~dsh$Group)))) %>%
mutate(term=rep(names,each=3)) %>% filter(!term=="X1") %>% arrange(term) %>% filter(term=="LDL") %>%
mutate(significance=ifelse(adj.p.value<0.001,"P<0.001",adj.p.value)
)
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy( TukeyHSD(aov(.~dsh$Group)))) %>%
mutate(term=rep(names,each=3)) %>% filter(!term=="X1") %>% arrange(term) %>% filter(term=="LDL") %>%
mutate(pvalue=ifelse(adj.p.value<0.001,"P<0.001",adj.p.value)) %>%
mutate(signifcance= ifelse(aj.p.value<0.05,"significant","non-significant")) %>%
select(-adj.p.value) %>% rename(variable=term)
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy( TukeyHSD(aov(.~dsh$Group)))) %>%
mutate(term=rep(names,each=3)) %>% filter(!term=="X1") %>% arrange(term) %>% filter(term=="LDL") %>%
mutate(pvalue=ifelse(adj.p.value<0.001,"P<0.001",adj.p.value)) %>%
mutate(signifcance= ifelse(adj.p.value<0.05,"significant","non-significant")) %>%
select(-adj.p.value) %>% rename(variable=term)
dsh%>%
select_if(is.numeric) %>%
map_df(~tidy(cor.test(.x,ssh$TSH)))
dsh%>%
select_if(is.numeric) %>%
map_df(~tidy(cor.test(.x,dsh$TSH)))
dsh%>%
select_if(is.numeric) %>%
map_df(~tidy(cor.test(.x,dsh$TSH))) %>%
tibble(names = names(.), data = .)
dsh%>%
select_if(is.numeric) %>%
map_df(~tidy(cor.test(.x,dsh$TSH))) %>%
add_column(variable=names)
dsh%>%
select_if(is.numeric) %>%
map_df(~tidy(cor.test(.x,dsh$TSH))) %>%
add_column(variable=names) %>%
mutate(Pvalue=ifelse(p.value<0.001,"P<0.001",adj.p.value)) %>%
mutate(signifcance= ifelse(p.value<0.05,"significant","non-significant")) %>%
select(-p.value) %>% filter(!variable=="X1")
dsh%>%
select_if(is.numeric) %>%
map_df(~tidy(cor.test(.x,dsh$TSH))) %>%
add_column(variable=names) %>%
mutate(Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(signifcance= ifelse(p.value<0.05,"significant","non-significant")) %>%
select(-p.value) %>% filter(!variable=="X1")
dsh%>%
select_if(is.numeric) %>%
map_df(~tidy(cor.test(.x,dsh$TSH))) %>%
add_column(variable=names) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(signifcance= ifelse(p.value<0.05,"significant","non-significant")) %>%
select(-p.value) %>% filter(!variable=="X1")
dsh%>%
select_if(is.numeric) %>%
map_df(~tidy(cor.test(.x,dsh$TSH))) %>%
add_column(variable=names) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(signifcance= ifelse(p.value<0.05,"significant","non-significant")) %>%
select(-p.value,-parameter,-statistic,-method,-alternative) %>%
rename(correlation=estimate) %>% filter(!variable=="X1") %>%
select(variable,correlation,conf.low,conf.high,Pvalue,significance)
dsh%>%
select_if(is.numeric) %>%
map_df(~tidy(cor.test(.x,dsh$TSH))) %>%
add_column(variable=names) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(signifcance= ifelse(p.value<0.05,"significant","non-significant"))
dsh%>%
select_if(is.numeric) %>%
map_df(~tidy(cor.test(.x,dsh$TSH))) %>%
add_column(variable=names) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(signifcance= ifelse(p.value<0.05,"significant","non-significant")) %>%
select(-p.value,-parameter,-statistic,-method,-alternative) %>%
rename(correlation=estimate) %>% filter(!variable=="X1") %>%
select(variable,correlation,conf.low,conf.high,Pvalue,significance)
dsh%>%
select_if(is.numeric) %>%
map_df(~tidy(cor.test(.x,dsh$TSH))) %>%
add_column(variable=names) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(signifcant= ifelse(p.value<0.05,"significant","non-significant")) %>%
select(-p.value,-parameter,-statistic,-method,-alternative) %>%
rename(correlation=estimate) %>% filter(!variable=="X1") %>%
select(variable,correlation,conf.low,conf.high,Pvalue,significant)
dsh%>%
select_if(is.numeric) %>%
map_df(~tidy(cor.test(.x,dsh$TSH))) %>%
add_column(variable=names) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(signf= ifelse(p.value<0.05,"significant","non-significant")) %>%
select(-p.value,-parameter,-statistic,-method,-alternative) %>%
rename(correlation=estimate) %>% filter(!variable=="X1")
dsh%>%
select_if(is.numeric) %>%
map_df(~tidy(cor.test(.x,dsh$TSH))) %>%
add_column(variable=names) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(signf= ifelse(p.value<0.05,"significant","non-significant")) %>%
select(-p.value,-parameter,-statistic,-method,-alternative) %>%
rename(correlation=estimate) %>% filter(!variable=="X1") %>%
select(variable,correlation,conf.low,conf.high,Pvalue,signf)
dsh%>%
select_if(is.numeric) %>%
map_df(~tidy(cor.test(.x,dsh$TSH))) %>%
add_column(variable=names) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(significance= ifelse(p.value<0.05,"significant","non-significant")) %>%
select(-p.value,-parameter,-statistic,-method,-alternative) %>%
rename(correlation=estimate) %>% filter(!variable=="X1") %>%
select(variable,correlation,conf.low,conf.high,Pvalue,significance)
dsh%>%
select_if(is.numeric) %>%
map_df(~tidy(cor.test(.x,dsh$TSH))) %>%
add_column(variable=names) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(significance= ifelse(p.value<0.05,"significant","non-significant")) %>%
select(-p.value,-parameter,-statistic,-method,-alternative) %>%
rename(correlation=estimate) %>% filter(!variable=="X1") %>%
select(variable,correlation,conf.low,conf.high,Pvalue,significance) %>% arrange(correlation)
dsh%>%
select_if(is.numeric) %>%
map_df(~tidy(cor.test(.x,dsh$TSH))) %>%
add_column(variable=names) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(significance= ifelse(p.value<0.05,"significant","non-significant")) %>%
select(-p.value,-parameter,-statistic,-method,-alternative) %>%
rename(correlation=estimate) %>% filter(!variable=="X1") %>%
select(variable,correlation,conf.low,conf.high,Pvalue,significance) %>% arrange(desc(correlation))
dsh%>%
select_if(is.numeric) %>%
map_df(~tidy(cor.test(.x,dsh$TSH))) %>%
add_column(variable=names) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(significance= ifelse(p.value<0.05,"significant","non-significant")) %>%
select(-p.value,-parameter,-statistic,-method,-alternative) %>%
rename(correlation=estimate) %>% filter(!variable%in%c("X1","TSH")) %>%
select(variable,correlation,conf.low,conf.high,Pvalue,significance) %>% arrange(desc(correlation))
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy( TukeyHSD(aov(.~dsh$Group)))) %>%
mutate(term=rep(names,each=3)) %>% filter(!term=="X1") %>% arrange(term) %>% filter(term=="LDL") %>%
mutate(pvalue=ifelse(adj.p.value<0.001,"P<0.001",adj.p.value)) %>%
mutate(signifcance= ifelse(adj.p.value<0.05,"significant","non-significant")) %>%
select(-adj.p.value) %>% rename(variable=term)->posthoc
dsh%>%
select_if(is.numeric) %>%
map_df(~tidy(cor.test(.x,dsh$TSH))) %>%
add_column(variable=names) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(significance= ifelse(p.value<0.05,"significant","non-significant")) %>%
select(-p.value,-parameter,-statistic,-method,-alternative) %>%
rename(correlation=estimate) %>% filter(!variable%in%c("X1","TSH")) %>%
select(variable,correlation,conf.low,conf.high,Pvalue,significance) %>% arrange(desc(correlation))->tsh_correlation
dsh %>% select_if(is.numeric)  %>%  map_df(aov(.~dsh$Group))
dsh %>% select_if(is.numeric)  %>%  map_df(tidy(aov(.~dsh$Group)))
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy(aov(.~dsh$Group)))
tidy(aov(dsh$LDL~dsh$Group))
tidy(aov(dsh$LDL~dsh$Group)) %>% mutate(sign=ifelse(p.value<0.001,"<0.001",p.value))
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy(aov(.~dsh$Group))) %>%
mutate(term=rep(names,each=2))
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy(aov(.~dsh$Group))) %>%
mutate(term=rep(names,each=2)) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(significance= ifelse(p.value<0.05,"significant","non-significant"))
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy(aov(.~dsh$Group))) %>%
mutate(term=rep(names,each=2)) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(significance= ifelse(p.value<0.05,"significant","non-significant")) %>%
rename(variable=term,`Sum Square`=sumsq,`Mean Square`=meansq,`F value`=statistic) %>%
select(-p.value) %>% replace_na(list(statistic=" ",Pvalue=" ",significance= " "))
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy(aov(.~dsh$Group))) %>%
mutate(term=rep(names,each=2)) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(significance= ifelse(p.value<0.05,"significant","non-significant")) %>%
rename(variable=term,`Sum Square`=sumsq,`Mean Square`=meansq,`F value`=statistic) %>%
select(-p.value) %>% replace_na(list(statistic=" ",`F value`=" ",Pvalue=" ",significance= " "))
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy(aov(.~dsh$Group))) %>%
mutate(term=rep(names,each=2)) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(significance= ifelse(p.value<0.05,"significant","non-significant")) %>%
rename(variable=term,`Sum Square`=sumsq,`Mean Square`=meansq,`F value`=statistic) %>%
select(-p.value) %>% replace_na(list(statistic=" ",`F value`=" ",Pvalue=" ",significance= " ")) %>%
filter(variable==X1)
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy(aov(.~dsh$Group))) %>%
mutate(term=rep(names,each=2)) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(significance= ifelse(p.value<0.05,"significant","non-significant")) %>%
rename(variable=term,`Sum Square`=sumsq,`Mean Square`=meansq,`F value`=statistic) %>%
select(-p.value) %>% replace_na(list(statistic=" ",`F value`=" ",Pvalue=" ",significance= " ")) %>%
filter(variable=="X1")
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy(aov(.~dsh$Group))) %>%
mutate(term=rep(names,each=2)) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(significance= ifelse(p.value<0.05,"significant","non-significant")) %>%
rename(variable=term,`Sum Square`=sumsq,`Mean Square`=meansq,`F value`=statistic) %>%
select(-p.value) %>% replace_na(list(statistic=" ",`F value`=" ",Pvalue=" ",significance= " ")) %>%
filter(variable=="X1") %>% rowid_to_column()
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy(aov(.~dsh$Group))) %>%
mutate(term=rep(names,each=2)) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(significance= ifelse(p.value<0.05,"significant","non-significant")) %>%
rename(variable=term,`Sum Square`=sumsq,`Mean Square`=meansq,`F value`=statistic) %>%
select(-p.value) %>% replace_na(list(statistic=" ",`F value`=" ",Pvalue=" ",significance= " ")) %>%
filter(variable=="X1") %>% rowid_to_column() %>% mutate(variable=ifelse(rowid==2,"Residuals","variable"))
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy(aov(.~dsh$Group))) %>%
mutate(term=rep(names,each=2)) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(significance= ifelse(p.value<0.05,"significant","non-significant")) %>%
rename(variable=term,`Sum Square`=sumsq,`Mean Square`=meansq,`F value`=statistic) %>%
select(-p.value) %>% replace_na(list(statistic=" ",`F value`=" ",Pvalue=" ",significance= " ")) %>%
filter(variable=="X1") %>% rowid_to_column() %>% mutate(variable=ifelse(rowid==2,"Residuals",variable))
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy(aov(.~dsh$Group))) %>%
mutate(term=rep(names,each=2)) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(significance= ifelse(p.value<0.05,"significant","non-significant")) %>%
rename(variable=term,`Sum Square`=sumsq,`Mean Square`=meansq,`F value`=statistic) %>%
select(-p.value) %>% replace_na(list(statistic=" ",`F value`=" ",Pvalue=" ",significance= " ")) %>%
filter(variable=="X1") %>% rowid_to_column() %>% mutate(variable=ifelse(rowid==2,"Residuals",variable)) %>%
select(-rowid)
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy( TukeyHSD(aov(.~dsh$Group)))) %>%
mutate(term=rep(names,each=3)) %>% filter(!term=="X1") %>% arrange(term) %>% filter(term=="LDL") %>%
mutate(pvalue=ifelse(adj.p.value<0.001,"P<0.001",adj.p.value)) %>%
mutate(signifcance= ifelse(adj.p.value<0.05,"significant","non-significant")) %>%
select(-adj.p.value) %>% rename(variable=term)->posthoc
dsh%>%
select_if(is.numeric) %>%
map_df(~tidy(cor.test(.x,dsh$TSH))) %>%
add_column(variable=names) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(significance= ifelse(p.value<0.05,"significant","non-significant")) %>%
select(-p.value,-parameter,-statistic,-method,-alternative) %>%
rename(correlation=estimate) %>% filter(!variable%in%c("X1","TSH")) %>%
select(variable,correlation,conf.low,conf.high,Pvalue,significance) %>% arrange(desc(correlation))->tsh_correlation
dsh %>% select_if(is.numeric)  %>%  map_df(~tidy(aov(.~dsh$Group))) %>%
mutate(term=rep(names,each=2)) %>%
mutate(p.value=round(p.value,digits=3),Pvalue=ifelse(p.value<0.001,"P<0.001",p.value)) %>%
mutate(significance= ifelse(p.value<0.05,"significant","non-significant")) %>%
rename(variable=term,`Sum Square`=sumsq,`Mean Square`=meansq,`F value`=statistic) %>%
select(-p.value) %>% replace_na(list(statistic=" ",`F value`=" ",Pvalue=" ",significance= " ")) %>%
rowid_to_column()->anovastats
dsh2=dsh1 %>% mutate(LDL= 130+0.8*TSH+0.1*FBS+0.01*FBS*TSH+2*Weight+rnorm(75,0,10))
library(tidyverse)
dsh2=dsh1 %>% mutate(LDL= 130+0.8*TSH+0.1*FBS+0.01*FBS*TSH+2*Weight+rnorm(75,0,10))
dsh2 %>% do(lm(LDL~TSH*FBS,data=.)) %>% summary()
dsh2 %>% do(lm(LDL~TSH*FBS,data=.))
library(broom)
set.seed(123)
dsh2 %>% tidy(lm(LDL~TSH*FBS,data=.))
View(dsh)
tidy(lm(LDL~TSH*FBS,data=dsh2))
options(scipen = 999)
tidy(lm(LDL~TSH*FBS,data=dsh2))
summary(lm(LDL~TSH*FBS,data=dsh2))
dsh2=dsh1 %>% mutate(LDL= 130+0.7*TSH+0.1*FBS+0.01*FBS*TSH+2*Weight+rnorm(75,0,10))
summary(lm(LDL~TSH*FBS,data=dsh2))
dsh2=dsh1 %>% mutate(LDL= 130+0.6*TSH+0.1*FBS+0.01*FBS*TSH+2.5*Weight+rnorm(75,0,10))
summary(lm(LDL~TSH*FBS,data=dsh2))
dsh2=dsh1 %>% mutate(LDL= 130+0.8*TSH+0.1*FBS+0.01*FBS*TSH+2.5*Weight+rnorm(75,0,10))
summary(lm(LDL~TSH*FBS,data=dsh2))
summary(lm(LDL~TSH+FBS,data=dsh2))
dsh2=dsh1 %>% mutate(LDL= 130+0.8*TSH+0.1*FBS+0.01*FBS*TSH+2.5*Weight+rnorm(75,0,15))
summary(lm(LDL~TSH+FBS,data=dsh2))
summary(lm(LDL~TSH*FBS,data=dsh2))
library(magrittr)
dsh2 %$% cor.test(LDL,TSH)
dsh2=dsh1 %>% mutate(LDL= 130+0.6*TSH+0.1*FBS+0.01*FBS*TSH+2.5*Weight+rnorm(75,0,15))
library(magrittr)
dsh
dsh2 %$% cor.test(LDL,TSH)
dsh2=dsh1 %>% mutate(LDL= 130+0.6*TSH+0.1*FBS+0.01*FBS*TSH+2.5*Weight+0.5*Age+rnorm(75,0,15))
dsh2 %$% cor.test(LDL,TSH)
summary(lm(LDL~TSH*FBS,data=dsh2))
dsh2=dsh1 %>% mutate(LDL= 130+0.6*TSH+0.1*FBS+0.01*FBS*TSH+0.5*Age+rnorm(75,0,15))
summary(lm(LDL~TSH*FBS,data=dsh2))
summary(lm(LDL~TSH+FBS,data=dsh2))
dsh2 %$% cor.test(LDL,TSH)
library(skimr)
dsh2 %>% group_by(Group) %>% skim(LDL)
dsh2$Group=factor(dsh2$Group,levels=c("DM","DM+SCH","DM+HYPOTHYROID"))
dsh2 %>% group_by(Group) %>% skim(LDL)
TukeyHSD(aov(LDL~Group,data=dsh2))
dsh2 %$% cor.test(LDL,FBS)
dsh2=dsh1 %>% mutate(LDL= 130+0.5*TSH+0.2*FBS+0.01*FBS*TSH+0.2*Age+rnorm(75,0,15))
sum
summary(lm(LDL~TSH+FBS,data=dsh2))
dsh2 %$% cor.test(LDL,FBS)
dsh2=dsh1 %>% mutate(LDL= 130+0.5*TSH+0.6*FBS+0.01*FBS*TSH+0.2*Age+rnorm(75,0,15))
summary(lm(LDL~TSH+FBS,data=dsh2))
dsh2 %$% cor.test(LDL,FBS)
dsh2 %>% group_by(Group) %>% skim(LDL)
dsh2$Group=factor(dsh2$Group,levels=c("DM","DM+SCH","DM+HYPOTHYROID"))
TukeyHSD(aov(LDL~Group,data=dsh2))
dsh2 %$% cor.test(LDL,TSH)
summary(lm(LDL~TSH*FBS,data=dsh2))
summary(lm(LDL~TSH+FBS,data=dsh2))
summary(lm(LDL~TSH+FBS,data=dsh))
summary(lm(LDL~TSH*FBS,data=dsh))
dsh2 %$% cor.test(HDL,TSH)
sig <- matrix(c(1.0, 0.8, 0.5, 0.2,
0.8, 1.0, 0.5, 0.5,
0.5, 0.5, 1.0, 0.5,
0.2, 0.5, 0.5, 1.0), nrow = 4)
library(MASS)
df.4 <- data.frame(mvrnorm(n = 1000, mu = rep(0, 4), Sigma = sig, empirical = TRUE))
detach("package:MASS")
summary(df.4)
cor(df$X1,df$X2)
cor.test(df$X1,df$X2)
cor.test(df.4$X1,df.4$X2)
